{"ast":null,"code":"var _jsxFileName = \"/home/misha/projects/films-list/src/components/select/select.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useCallback, useMemo, useState } from 'react';\nimport { getGenres } from '../../api';\nimport './select.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Select = () => {\n  _s();\n\n  var _options$;\n\n  const [isOpenSelect, setIsOpenSelect] = useState(false);\n  const [selectedOptions, setSelectedOptions] = useState();\n  const [options, setOptions] = useState([]);\n  const color = useMemo(() => Math.floor(Math.random() * 16777215).toString(16), [selectedOptions]);\n  const handleOpenSelect = useCallback(() => {\n    setIsOpenSelect(!isOpenSelect);\n  }, [isOpenSelect]);\n  React.useEffect(() => {\n    getGenres('', setOptions);\n  }, []);\n  console.log({\n    options\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"selectWrapper\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"select\",\n      children: [(options === null || options === void 0 ? void 0 : (_options$ = options[0]) === null || _options$ === void 0 ? void 0 : _options$.id) ? options === null || options === void 0 ? void 0 : options.map(({\n        id,\n        name\n      }) => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            backgroundColor: `#${color}49`\n          },\n          className: \"chosenOptionsWrapper\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"chosenOptionName\",\n            children: name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"deleteChosenOption\",\n            children: \"+\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 17\n          }, this)]\n        }, id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 15\n        }, this);\n      }) : /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"emptyValue\",\n        children: \"Choose some category\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        onClick: () => handleOpenSelect(),\n        className: \"toggleOpenSelect\",\n        children: \"\\u27BE\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), isOpenSelect && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"optionsWrapper\",\n      children: options === null || options === void 0 ? void 0 : options.map(({\n        id,\n        name\n      }) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"option\",\n        children: name\n      }, id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Select, \"ERH0VYmS/nE9SmIX4ZjkYQRNA70=\");\n\n_c = Select;\n\nvar _c;\n\n$RefreshReg$(_c, \"Select\");","map":{"version":3,"sources":["/home/misha/projects/films-list/src/components/select/select.tsx"],"names":["React","useCallback","useMemo","useState","getGenres","Select","isOpenSelect","setIsOpenSelect","selectedOptions","setSelectedOptions","options","setOptions","color","Math","floor","random","toString","handleOpenSelect","useEffect","console","log","id","map","name","backgroundColor"],"mappings":";;;AAAA,OAAOA,KAAP,IAAoBC,WAApB,EAAiCC,OAAjC,EAA0CC,QAA1C,QAA0D,OAA1D;AACA,SAASC,SAAT,QAA0B,WAA1B;AACA,OAAO,eAAP;;AAEA,OAAO,MAAMC,MAAU,GAAG,MAAM;AAAA;;AAAA;;AAC9B,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCJ,QAAQ,CAAC,KAAD,CAAhD;AACA,QAAM,CAACK,eAAD,EAAkBC,kBAAlB,IAAwCN,QAAQ,EAAtD;AACA,QAAM,CAACO,OAAD,EAAUC,UAAV,IAAwBR,QAAQ,CAAiC,EAAjC,CAAtC;AACA,QAAMS,KAAK,GAAGV,OAAO,CAAC,MAAMW,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,QAA3B,EAAqCC,QAArC,CAA8C,EAA9C,CAAP,EAA0D,CAACR,eAAD,CAA1D,CAArB;AAEA,QAAMS,gBAAgB,GAAGhB,WAAW,CAAC,MAAM;AACzCM,IAAAA,eAAe,CAAC,CAACD,YAAF,CAAf;AACD,GAFmC,EAEjC,CAACA,YAAD,CAFiC,CAApC;AAIAN,EAAAA,KAAK,CAACkB,SAAN,CAAgB,MAAM;AACpBd,IAAAA,SAAS,CAAC,EAAD,EAAKO,UAAL,CAAT;AACD,GAFD,EAEG,EAFH;AAIAQ,EAAAA,OAAO,CAACC,GAAR,CAAY;AAAEV,IAAAA;AAAF,GAAZ;AAEA,sBACE;AAAK,IAAA,SAAS,EAAC,eAAf;AAAA,4BACE;AAAK,MAAA,SAAS,EAAC,QAAf;AAAA,iBACG,CAAAA,OAAO,SAAP,IAAAA,OAAO,WAAP,yBAAAA,OAAO,CAAG,CAAH,CAAP,wDAAcW,EAAd,IACCX,OADD,aACCA,OADD,uBACCA,OAAO,CAAEY,GAAT,CAAa,CAAC;AAAED,QAAAA,EAAF;AAAME,QAAAA;AAAN,OAAD,KAAkB;AAC7B,4BACE;AAEE,UAAA,KAAK,EAAE;AAAEC,YAAAA,eAAe,EAAG,IAAGZ,KAAM;AAA7B,WAFT;AAGE,UAAA,SAAS,EAAC,sBAHZ;AAAA,kCAKE;AAAM,YAAA,SAAS,EAAC,kBAAhB;AAAA,sBAAoCW;AAApC;AAAA;AAAA;AAAA;AAAA,kBALF,eAME;AAAK,YAAA,SAAS,EAAC,oBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBANF;AAAA,WACOF,EADP;AAAA;AAAA;AAAA;AAAA,gBADF;AAUD,OAXD,CADD,gBAcC;AAAG,QAAA,SAAS,EAAC,YAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAfJ,eAiBE;AAAK,QAAA,OAAO,EAAE,MAAMJ,gBAAgB,EAApC;AAAwC,QAAA,SAAS,EAAC,kBAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAjBF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAsBGX,YAAY,iBACX;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA,gBAIGI,OAJH,aAIGA,OAJH,uBAIGA,OAAO,CAAEY,GAAT,CAAa,CAAC;AAAED,QAAAA,EAAF;AAAME,QAAAA;AAAN,OAAD,kBACZ;AAAc,QAAA,SAAS,EAAC,QAAxB;AAAA,kBACGA;AADH,SAAUF,EAAV;AAAA;AAAA;AAAA;AAAA,cADD;AAJH;AAAA;AAAA;AAAA;AAAA,YAvBJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAqCD,CArDM;;GAAMhB,M;;KAAAA,M","sourcesContent":["import React, { FC, useCallback, useMemo, useState } from 'react';\nimport { getGenres } from '../../api';\nimport './select.scss';\n\nexport const Select: FC = () => {\n  const [isOpenSelect, setIsOpenSelect] = useState(false);\n  const [selectedOptions, setSelectedOptions] = useState()\n  const [options, setOptions] = useState<{ id: number; name: string }[]>([]);\n  const color = useMemo(() => Math.floor(Math.random() * 16777215).toString(16), [selectedOptions])\n \n  const handleOpenSelect = useCallback(() => {\n    setIsOpenSelect(!isOpenSelect);\n  }, [isOpenSelect]);\n\n  React.useEffect(() => {\n    getGenres('', setOptions);\n  }, []);\n\n  console.log({ options });\n\n  return (\n    <div className=\"selectWrapper\">\n      <div className=\"select\">\n        {options?.[0]?.id ? (\n          options?.map(({ id, name }) => {\n            return (\n              <div\n                key={id}\n                style={{ backgroundColor: `#${color}49` }}\n                className=\"chosenOptionsWrapper\"\n              >\n                <span className=\"chosenOptionName\">{name}</span>\n                <div className=\"deleteChosenOption\">+</div>\n              </div>\n            );\n          })\n        ) : (\n          <p className=\"emptyValue\">Choose some category</p>\n        )}\n        <div onClick={() => handleOpenSelect()} className=\"toggleOpenSelect\">\n          &#x27BE;\n        </div>\n      </div>\n      {isOpenSelect && (\n        <div className=\"optionsWrapper\">\n          {/* <div onClick={() => handleOpenSelect()} className=\"option\">\n            option\n          </div> */}\n          {options?.map(({ id, name }) => (\n            <div key={id} className=\"option\">\n              {name}\n            </div>\n          ))}\n        </div>\n      )}\n    </div>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}