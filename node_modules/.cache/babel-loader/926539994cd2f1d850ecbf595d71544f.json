{"ast":null,"code":"import axios from 'axios';\nconst API_KEY = '55603383b6e7d248eaf4b2df9f74c6ec';\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst GENRES_URL = `${BASE_URL}//genre/movie/list?api_key=${API_KEY}&language=en-US`;\nconst MOVIE_URL = `${BASE_URL}/discover/movie?api_key=${API_KEY}&language=en-US`;\nconst getMovies = axios.create({\n  baseURL: MOVIE_URL,\n  responseType: 'json'\n});\nconst getGenresHTTP = axios.create({\n  baseURL: GENRES_URL,\n  responseType: 'json'\n});\n\nconst getGenres = async (url, setState) => {\n  return getGenresHTTP.get(url).then(response => {\n    setState(response.data.genres);\n  });\n};\n\nconst getFilms = (url, setState, isFirstDicker) => {\n  return getMovies.get(url).then(response => {\n    if (isFirstDicker) {\n      setState(response.data.slice(0, 10));\n    } else {\n      setState(response.data.slice(10));\n    }\n  });\n};\n\nexport { getFilms, getGenres, MOVIE_URL };","map":{"version":3,"sources":["/home/misha/projects/films-list/src/api.ts"],"names":["axios","API_KEY","BASE_URL","GENRES_URL","MOVIE_URL","getMovies","create","baseURL","responseType","getGenresHTTP","getGenres","url","setState","get","then","response","data","genres","getFilms","isFirstDicker","slice"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,MAAMC,OAAO,GAAG,kCAAhB;AACA,MAAMC,QAAQ,GAAG,8BAAjB;AACA,MAAMC,UAAU,GAAI,GAAED,QAAS,8BAA6BD,OAAQ,iBAApE;AACA,MAAMG,SAAS,GAAI,GAAEF,QAAS,2BAA0BD,OAAQ,iBAAhE;AAEA,MAAMI,SAAS,GAAGL,KAAK,CAACM,MAAN,CAAa;AAC7BC,EAAAA,OAAO,EAAEH,SADoB;AAE7BI,EAAAA,YAAY,EAAE;AAFe,CAAb,CAAlB;AAKA,MAAMC,aAAa,GAAGT,KAAK,CAACM,MAAN,CAAa;AACjCC,EAAAA,OAAO,EAAEJ,UADwB;AAEjCK,EAAAA,YAAY,EAAE;AAFmB,CAAb,CAAtB;;AAKA,MAAME,SAAS,GAAG,OAAOC,GAAP,EAAoBC,QAApB,KAAoD;AACpE,SAAOH,aAAa,CAACI,GAAd,CAAkBF,GAAlB,EAAuBG,IAAvB,CAA6BC,QAAD,IAAmB;AACpDH,IAAAA,QAAQ,CAACG,QAAQ,CAACC,IAAT,CAAcC,MAAf,CAAR;AACD,GAFM,CAAP;AAGD,CAJD;;AAMA,MAAMC,QAAQ,GAAG,CACfP,GADe,EAEfC,QAFe,EAGfO,aAHe,KAIZ;AACH,SAAOd,SAAS,CAACQ,GAAV,CAAcF,GAAd,EAAmBG,IAAnB,CAAyBC,QAAD,IAAc;AAC3C,QAAII,aAAJ,EAAmB;AACjBP,MAAAA,QAAQ,CAACG,QAAQ,CAACC,IAAT,CAAcI,KAAd,CAAoB,CAApB,EAAuB,EAAvB,CAAD,CAAR;AACD,KAFD,MAEO;AACLR,MAAAA,QAAQ,CAACG,QAAQ,CAACC,IAAT,CAAcI,KAAd,CAAoB,EAApB,CAAD,CAAR;AACD;AACF,GANM,CAAP;AAOD,CAZD;;AAcA,SAASF,QAAT,EAAmBR,SAAnB,EAA8BN,SAA9B","sourcesContent":["import axios from 'axios';\n\nconst API_KEY = '55603383b6e7d248eaf4b2df9f74c6ec';\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst GENRES_URL = `${BASE_URL}//genre/movie/list?api_key=${API_KEY}&language=en-US`;\nconst MOVIE_URL = `${BASE_URL}/discover/movie?api_key=${API_KEY}&language=en-US`;\n\nconst getMovies = axios.create({\n  baseURL: MOVIE_URL,\n  responseType: 'json',\n});\n\nconst getGenresHTTP = axios.create({\n  baseURL: GENRES_URL,\n  responseType: 'json',\n});\n\nconst getGenres = async (url: string, setState: (re: any) => void) => {\n  return getGenresHTTP.get(url).then((response: any) => {\n    setState(response.data.genres);\n  });\n};\n\nconst getFilms = (\n  url: string,\n  setState: (re: any) => void,\n  isFirstDicker: boolean,\n) => {\n  return getMovies.get(url).then((response) => {\n    if (isFirstDicker) {\n      setState(response.data.slice(0, 10));\n    } else {\n      setState(response.data.slice(10));\n    }\n  });\n};\n\nexport { getFilms, getGenres, MOVIE_URL };\n"]},"metadata":{},"sourceType":"module"}