{"ast":null,"code":"var _jsxFileName = \"/home/misha/projects/films-list/src/components/film-card/film-card.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useMemo } from 'react';\nimport './film-card.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const FilmCard = ({\n  image,\n  genreIds,\n  title,\n  year,\n  genres\n}) => {\n  _s();\n\n  const filteredGenres = useMemo(() => genres.filter(({\n    id\n  }) => genreIds.includes(id)), [genreIds]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"filmCardWrapper\",\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      src: `https://image.tmdb.org/t/p/w500/${image}`,\n      alt: title,\n      className: \"image\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"contentWrapper\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"contentTop\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          className: \"title\",\n          children: title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"year\",\n          children: year\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"genresWrapper\",\n        children: filteredGenres.map((item, id, array) => /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"genre\",\n          children: id !== array.length - 1 ? `${item.name}, ` : item.name\n        }, item.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n};\n\n_s(FilmCard, \"/ITg8rRGd+cdCv/dq2241ES5O6s=\");\n\n_c = FilmCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"FilmCard\");","map":{"version":3,"sources":["/home/misha/projects/films-list/src/components/film-card/film-card.tsx"],"names":["React","useMemo","FilmCard","image","genreIds","title","year","genres","filteredGenres","filter","id","includes","map","item","array","length","name"],"mappings":";;;AAAA,OAAOA,KAAP,IAAoBC,OAApB,QAAmC,OAAnC;AACA,OAAO,kBAAP;;AAGA,OAAO,MAAMC,QAA2B,GAAG,CAAC;AAC1CC,EAAAA,KAD0C;AAE1CC,EAAAA,QAF0C;AAG1CC,EAAAA,KAH0C;AAI1CC,EAAAA,IAJ0C;AAK1CC,EAAAA;AAL0C,CAAD,KAMrC;AAAA;;AACJ,QAAMC,cAAc,GAAGP,OAAO,CAC5B,MAAMM,MAAM,CAACE,MAAP,CAAc,CAAC;AAAEC,IAAAA;AAAF,GAAD,KAAYN,QAAQ,CAACO,QAAT,CAAkBD,EAAlB,CAA1B,CADsB,EAE5B,CAACN,QAAD,CAF4B,CAA9B;AAKA,sBACE;AAAK,IAAA,SAAS,EAAC,iBAAf;AAAA,4BACE;AACE,MAAA,GAAG,EAAG,mCAAkCD,KAAM,EADhD;AAEE,MAAA,GAAG,EAAEE,KAFP;AAGE,MAAA,SAAS,EAAC;AAHZ;AAAA;AAAA;AAAA;AAAA,YADF,eAME;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA,8BACE;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA,gCACE;AAAI,UAAA,SAAS,EAAC,OAAd;AAAA,oBAAuBA;AAAvB;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAG,UAAA,SAAS,EAAC,MAAb;AAAA,oBAAqBC;AAArB;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAKE;AAAK,QAAA,SAAS,EAAC,eAAf;AAAA,kBACGE,cAAc,CAACI,GAAf,CAAmB,CAACC,IAAD,EAAOH,EAAP,EAAWI,KAAX,kBAClB;AAAiB,UAAA,SAAS,EAAC,OAA3B;AAAA,oBACGJ,EAAE,KAAKI,KAAK,CAACC,MAAN,GAAe,CAAtB,GAA2B,GAAEF,IAAI,CAACG,IAAK,IAAvC,GAA6CH,IAAI,CAACG;AADrD,WAAQH,IAAI,CAACH,EAAb;AAAA;AAAA;AAAA;AAAA,gBADD;AADH;AAAA;AAAA;AAAA;AAAA,cALF;AAAA;AAAA;AAAA;AAAA;AAAA,YANF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAsBD,CAlCM;;GAAMR,Q;;KAAAA,Q","sourcesContent":["import React, { FC, useMemo } from 'react';\nimport './film-card.scss';\nimport { FilmCardProps } from './film-card.types';\n\nexport const FilmCard: FC<FilmCardProps> = ({\n  image,\n  genreIds,\n  title,\n  year,\n  genres,\n}) => {\n  const filteredGenres = useMemo(\n    () => genres.filter(({ id }) => genreIds.includes(id)),\n    [genreIds],\n  );\n\n  return (\n    <div className=\"filmCardWrapper\">\n      <img\n        src={`https://image.tmdb.org/t/p/w500/${image}`}\n        alt={title}\n        className=\"image\"\n      />\n      <div className=\"contentWrapper\">\n        <div className=\"contentTop\">\n          <h4 className=\"title\">{title}</h4>\n          <p className=\"year\">{year}</p>\n        </div>\n        <div className=\"genresWrapper\">\n          {filteredGenres.map((item, id, array) => (\n            <p key={item.id} className=\"genre\">\n              {id !== array.length - 1 ? `${item.name}, ` : item.name}\n            </p>\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}