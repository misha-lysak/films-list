{"ast":null,"code":"import _slicedToArray from\"/home/misha/projects/films-list/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{useCallback,useState}from'react';var useSelectData=function useSelectData(handleSelectOption){var _useState=useState(false),_useState2=_slicedToArray(_useState,2),isOpenSelect=_useState2[0],setIsOpenSelect=_useState2[1];var _useState3=useState([]),_useState4=_slicedToArray(_useState3,2),selectedOptions=_useState4[0],setSelectOptions=_useState4[1];var handleOpenSelect=useCallback(function(){setIsOpenSelect(!isOpenSelect);},[isOpenSelect]);var handleRemoveSelectedOption=function handleRemoveSelectedOption(id){var filteredSelectedOptions=selectedOptions.filter(function(option){return option.id!==id;});setSelectOptions(filteredSelectedOptions);handleSelectOption({genresIds:filteredSelectedOptions.map(function(option){return option.id;})});};return{isOpenSelect:isOpenSelect,selectedOptions:selectedOptions,handleOpenSelect:handleOpenSelect,handleRemoveSelectedOption:handleRemoveSelectedOption,setSelectOptions:setSelectOptions};};export{useSelectData};","map":{"version":3,"sources":["/home/misha/projects/films-list/src/components/select/select.hook.ts"],"names":["useCallback","useState","useSelectData","handleSelectOption","isOpenSelect","setIsOpenSelect","selectedOptions","setSelectOptions","handleOpenSelect","handleRemoveSelectedOption","id","filteredSelectedOptions","filter","option","genresIds","map"],"mappings":"kHAAA,OAASA,WAAT,CAAsBC,QAAtB,KAAsC,OAAtC,CAGA,GAAMC,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,CAACC,kBAAD,CAA0C,CAC9D,cAAwCF,QAAQ,CAAC,KAAD,CAAhD,wCAAOG,YAAP,eAAqBC,eAArB,eACA,eAA4CJ,QAAQ,CAAc,EAAd,CAApD,yCAAOK,eAAP,eAAwBC,gBAAxB,eAEA,GAAMC,CAAAA,gBAAgB,CAAGR,WAAW,CAAC,UAAM,CACzCK,eAAe,CAAC,CAACD,YAAF,CAAf,CACD,CAFmC,CAEjC,CAACA,YAAD,CAFiC,CAApC,CAIA,GAAMK,CAAAA,0BAA0B,CAAG,QAA7BA,CAAAA,0BAA6B,CAACC,EAAD,CAAgB,CACjD,GAAMC,CAAAA,uBAAuB,CAAGL,eAAe,CAACM,MAAhB,CAAuB,SAACC,MAAD,QAAYA,CAAAA,MAAM,CAACH,EAAP,GAAcA,EAA1B,EAAvB,CAAhC,CACAH,gBAAgB,CAACI,uBAAD,CAAhB,CACAR,kBAAkB,CAAC,CAAEW,SAAS,CAAEH,uBAAuB,CAACI,GAAxB,CAA4B,SAACF,MAAD,QAAYA,CAAAA,MAAM,CAACH,EAAnB,EAA5B,CAAb,CAAD,CAAlB,CACD,CAJD,CAMA,MAAO,CACLN,YAAY,CAAZA,YADK,CAELE,eAAe,CAAfA,eAFK,CAGLE,gBAAgB,CAAhBA,gBAHK,CAILC,0BAA0B,CAA1BA,0BAJK,CAKLF,gBAAgB,CAAhBA,gBALK,CAAP,CAOD,CArBD,CAuBA,OAASL,aAAT","sourcesContent":["import { useCallback, useState } from 'react';\nimport { HandleSearchType, GenresState } from '../../types';\n\nconst useSelectData = (handleSelectOption: HandleSearchType) => {\n  const [isOpenSelect, setIsOpenSelect] = useState(false);\n  const [selectedOptions, setSelectOptions] = useState<GenresState>([]);\n\n  const handleOpenSelect = useCallback(() => {\n    setIsOpenSelect(!isOpenSelect);\n  }, [isOpenSelect]);\n\n  const handleRemoveSelectedOption = (id: number) => {\n    const filteredSelectedOptions = selectedOptions.filter((option) => option.id !== id);\n    setSelectOptions(filteredSelectedOptions);\n    handleSelectOption({ genresIds: filteredSelectedOptions.map((option) => option.id) });\n  };\n\n  return {\n    isOpenSelect,\n    selectedOptions,\n    handleOpenSelect,\n    handleRemoveSelectedOption,\n    setSelectOptions,\n  };\n};\n\nexport { useSelectData };\n"]},"metadata":{},"sourceType":"module"}