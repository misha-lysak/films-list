{"ast":null,"code":"var _jsxFileName = \"/home/misha/projects/films-list/src/App.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { getFilms, getGenres, loader } from './api';\nimport './App.scss';\nimport { FilmList, Header, MemoSelect } from './components';\nimport { Loader } from './components/loader';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [films, setFilms] = useState();\n  const [genres, setGenres] = useState([]);\n  React.useEffect(() => {\n    getFilms('', setFilms);\n  }, []);\n  React.useEffect(() => {\n    getGenres('', setGenres);\n  }, []);\n\n  const handleSelectOption = ids => {\n    const convertedIds = ids.join(',');\n    getFilms(`&with_genres=${convertedIds}`, setFilms);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [loader.movie && /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 24\n    }, this), /*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content\",\n      children: [/*#__PURE__*/_jsxDEV(MemoSelect, {\n        options: genres,\n        handleSelectOption: handleSelectOption\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FilmList, {\n        genres: genres,\n        filmList: films === null || films === void 0 ? void 0 : films.results\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"pQDUtH9zp+OV3+G6JJrbAoZxlPg=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/misha/projects/films-list/src/App.tsx"],"names":["React","useState","getFilms","getGenres","loader","FilmList","Header","MemoSelect","Loader","App","films","setFilms","genres","setGenres","useEffect","handleSelectOption","ids","convertedIds","join","movie","results"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,QAAT,EAAmBC,SAAnB,EAA8BC,MAA9B,QAA4C,OAA5C;AACA,OAAO,YAAP;AACA,SAASC,QAAT,EAAmBC,MAAnB,EAA2BC,UAA3B,QAA6C,cAA7C;AAEA,SAASC,MAAT,QAAuB,qBAAvB;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBV,QAAQ,EAAlC;AACA,QAAM,CAACW,MAAD,EAASC,SAAT,IAAsBZ,QAAQ,CAAc,EAAd,CAApC;AACAD,EAAAA,KAAK,CAACc,SAAN,CAAgB,MAAM;AACpBZ,IAAAA,QAAQ,CAAC,EAAD,EAAKS,QAAL,CAAR;AACD,GAFD,EAEG,EAFH;AAIAX,EAAAA,KAAK,CAACc,SAAN,CAAgB,MAAM;AACpBX,IAAAA,SAAS,CAAC,EAAD,EAAKU,SAAL,CAAT;AACD,GAFD,EAEG,EAFH;;AAIA,QAAME,kBAAkB,GAAIC,GAAD,IAAmB;AAC5C,UAAMC,YAAY,GAAGD,GAAG,CAACE,IAAJ,CAAS,GAAT,CAArB;AACAhB,IAAAA,QAAQ,CAAE,gBAAee,YAAa,EAA9B,EAAiCN,QAAjC,CAAR;AACD,GAHD;;AAKA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,eACGP,MAAM,CAACe,KAAP,iBAAgB,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,YADnB,eAEE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA,8BACE,QAAC,UAAD;AAAY,QAAA,OAAO,EAAEP,MAArB;AAA6B,QAAA,kBAAkB,EAAEG;AAAjD;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,QAAD;AAAU,QAAA,MAAM,EAAEH,MAAlB;AAA0B,QAAA,QAAQ,EAAEF,KAAF,aAAEA,KAAF,uBAAEA,KAAK,CAAEU;AAA3C;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YAHF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAUD;;GA1BQX,G;;KAAAA,G;AA4BT,eAAeA,GAAf","sourcesContent":["import React, { useState } from 'react';\nimport { getFilms, getGenres, loader } from './api';\nimport './App.scss';\nimport { FilmList, Header, MemoSelect } from './components';\nimport { FilmsResponse, GenresState } from './app.types';\nimport { Loader } from './components/loader';\n\nfunction App() {\n  const [films, setFilms] = useState<FilmsResponse>();\n  const [genres, setGenres] = useState<GenresState>([]);\n  React.useEffect(() => {\n    getFilms('', setFilms);\n  }, []);\n\n  React.useEffect(() => {\n    getGenres('', setGenres);\n  }, []);\n\n  const handleSelectOption = (ids: number[]) => {\n    const convertedIds = ids.join(',');\n    getFilms(`&with_genres=${convertedIds}`, setFilms);\n  };\n\n  return (\n    <div className=\"app\">\n      {loader.movie && <Loader />}\n      <Header />\n      <div className=\"content\">\n        <MemoSelect options={genres} handleSelectOption={handleSelectOption} />\n        <FilmList genres={genres} filmList={films?.results} />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}