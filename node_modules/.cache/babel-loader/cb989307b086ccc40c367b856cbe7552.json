{"ast":null,"code":"var _jsxFileName = \"/home/misha/projects/films-list/src/components/sort/sort.tsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useSortData } from './sort.hook';\nimport './sort.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Sort = ({\n  handleSort\n}) => {\n  _s();\n\n  const {\n    isOpenSelect,\n    sortBy,\n    sortValues,\n    handleSelect,\n    handleOpenSelect\n  } = useSortData(handleSort);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"sortWrapper\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      onClick: () => handleOpenSelect(),\n      className: \"select\",\n      children: [sortBy ? /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"chosenOptionName\",\n        children: sortBy\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"chosenOptionName\",\n        children: \"Sort\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"toggleOpenSelect\",\n        onClick: () => handleOpenSelect(),\n        children: \"\\u27BE\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this), isOpenSelect && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"optionsWrapper\",\n      children: sortValues.map(({\n        id,\n        name\n      }) => /*#__PURE__*/_jsxDEV(\"div\", {\n        onClick: () => {\n          handleOpenSelect();\n          handleSelect(name, id);\n        },\n        className: \"option\",\n        children: name\n      }, id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Sort, \"ZrBOa6rlnULUIV/pkNAcL/WtYdQ=\", false, function () {\n  return [useSortData];\n});\n\n_c = Sort;\n\nvar _c;\n\n$RefreshReg$(_c, \"Sort\");","map":{"version":3,"sources":["/home/misha/projects/films-list/src/components/sort/sort.tsx"],"names":["React","useSortData","Sort","handleSort","isOpenSelect","sortBy","sortValues","handleSelect","handleOpenSelect","map","id","name"],"mappings":";;;AAAA,OAAOA,KAAP,MAEO,OAFP;AAGA,SAASC,WAAT,QAA4B,aAA5B;AACA,OAAO,aAAP;;AAGA,OAAO,MAAMC,IAAmB,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAoB;AAAA;;AACrD,QAAM;AACJC,IAAAA,YADI;AAEJC,IAAAA,MAFI;AAGJC,IAAAA,UAHI;AAIJC,IAAAA,YAJI;AAKJC,IAAAA;AALI,MAMFP,WAAW,CAACE,UAAD,CANf;AAQA,sBACE;AAAK,IAAA,SAAS,EAAC,aAAf;AAAA,4BACE;AAAK,MAAA,OAAO,EAAE,MAAMK,gBAAgB,EAApC;AAAwC,MAAA,SAAS,EAAC,QAAlD;AAAA,iBACGH,MAAM,gBACL;AAAM,QAAA,SAAS,EAAC,kBAAhB;AAAA,kBAAoCA;AAApC;AAAA;AAAA;AAAA;AAAA,cADK,gBAGL;AAAM,QAAA,SAAS,EAAC,kBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJJ,eAOE;AAAK,QAAA,SAAS,EAAC,kBAAf;AAAkC,QAAA,OAAO,EAAE,MAAMG,gBAAgB,EAAjE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAPF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAYGJ,YAAY,iBACX;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA,gBACGE,UAAU,CAACG,GAAX,CAAe,CAAC;AAAEC,QAAAA,EAAF;AAAMC,QAAAA;AAAN,OAAD,kBACd;AAEE,QAAA,OAAO,EAAE,MAAM;AACbH,UAAAA,gBAAgB;AAChBD,UAAAA,YAAY,CAACI,IAAD,EAAOD,EAAP,CAAZ;AACD,SALH;AAME,QAAA,SAAS,EAAC,QANZ;AAAA,kBAQGC;AARH,SACOD,EADP;AAAA;AAAA;AAAA;AAAA,cADD;AADH;AAAA;AAAA;AAAA;AAAA,YAbJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA+BD,CAxCM;;GAAMR,I;UAOPD,W;;;KAPOC,I","sourcesContent":["import React, {\n  FC,\n} from 'react';\nimport { useSortData } from './sort.hook';\nimport './sort.scss';\nimport { SortProps } from './sort.types';\n\nexport const Sort: FC<SortProps> = ({ handleSort }) => {\n  const {\n    isOpenSelect,\n    sortBy,\n    sortValues,\n    handleSelect,\n    handleOpenSelect,\n  } = useSortData(handleSort);\n  \n  return (\n    <div className=\"sortWrapper\">\n      <div onClick={() => handleOpenSelect()} className=\"select\">\n        {sortBy ? (\n          <span className=\"chosenOptionName\">{sortBy}</span>\n        ) : (\n          <span className=\"chosenOptionName\">Sort</span>\n        )}\n\n        <div className=\"toggleOpenSelect\" onClick={() => handleOpenSelect()}>\n          &#x27BE;\n        </div>\n      </div>\n      {isOpenSelect && (\n        <div className=\"optionsWrapper\">\n          {sortValues.map(({ id, name }) => (\n            <div\n              key={id}\n              onClick={() => {\n                handleOpenSelect();\n                handleSelect(name, id);\n              }}\n              className=\"option\"\n            >\n              {name}\n            </div>\n          ))}\n        </div>\n      )}\n    </div>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}