{"ast":null,"code":"import React,{useMemo}from'react';import'./film-card.scss';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";export var FilmCard=function FilmCard(_ref){var image=_ref.image,genreIds=_ref.genreIds,title=_ref.title,year=_ref.year,genres=_ref.genres;var filteredGenres=useMemo(function(){return genres.filter(function(_ref2){var id=_ref2.id;return genreIds.includes(id);});},[genreIds]);return/*#__PURE__*/_jsxs(\"div\",{className:\"filmCardWrapper\",children:[/*#__PURE__*/_jsx(\"img\",{src:\"https://image.tmdb.org/t/p/w500/\".concat(image),alt:title,className:\"image\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"contentWrapper\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"contentTop\",children:[/*#__PURE__*/_jsx(\"h4\",{className:\"title\",children:title}),/*#__PURE__*/_jsx(\"p\",{className:\"year\",children:year})]}),/*#__PURE__*/_jsx(\"div\",{className:\"genresWrapper\",children:filteredGenres.map(function(item,id,array){return/*#__PURE__*/_jsx(\"p\",{className:\"genre\",children:id!==array.length-1?\"\".concat(item.name,\", \"):item.name},item.id);})})]})]});};","map":{"version":3,"sources":["/home/misha/projects/films-list/src/components/film-card/film-card.tsx"],"names":["React","useMemo","FilmCard","image","genreIds","title","year","genres","filteredGenres","filter","id","includes","map","item","array","length","name"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,EAAoBC,OAApB,KAAmC,OAAnC,CACA,MAAO,kBAAP,C,wFAGA,MAAO,IAAMC,CAAAA,QAA2B,CAAG,QAA9BA,CAAAA,QAA8B,MAMrC,IALJC,CAAAA,KAKI,MALJA,KAKI,CAJJC,QAII,MAJJA,QAII,CAHJC,KAGI,MAHJA,KAGI,CAFJC,IAEI,MAFJA,IAEI,CADJC,MACI,MADJA,MACI,CACJ,GAAMC,CAAAA,cAAc,CAAGP,OAAO,CAC5B,iBAAMM,CAAAA,MAAM,CAACE,MAAP,CAAc,mBAAGC,CAAAA,EAAH,OAAGA,EAAH,OAAYN,CAAAA,QAAQ,CAACO,QAAT,CAAkBD,EAAlB,CAAZ,EAAd,CAAN,EAD4B,CAE5B,CAACN,QAAD,CAF4B,CAA9B,CAKA,mBACE,aAAK,SAAS,CAAC,iBAAf,wBACE,YACE,GAAG,2CAAqCD,KAArC,CADL,CAEE,GAAG,CAAEE,KAFP,CAGE,SAAS,CAAC,OAHZ,EADF,cAME,aAAK,SAAS,CAAC,gBAAf,wBACE,aAAK,SAAS,CAAC,YAAf,wBACE,WAAI,SAAS,CAAC,OAAd,UAAuBA,KAAvB,EADF,cAEE,UAAG,SAAS,CAAC,MAAb,UAAqBC,IAArB,EAFF,GADF,cAKE,YAAK,SAAS,CAAC,eAAf,UACGE,cAAc,CAACI,GAAf,CAAmB,SAACC,IAAD,CAAOH,EAAP,CAAWI,KAAX,qBAClB,UAAiB,SAAS,CAAC,OAA3B,UACGJ,EAAE,GAAKI,KAAK,CAACC,MAAN,CAAe,CAAtB,WAA6BF,IAAI,CAACG,IAAlC,OAA6CH,IAAI,CAACG,IADrD,EAAQH,IAAI,CAACH,EAAb,CADkB,EAAnB,CADH,EALF,GANF,GADF,CAsBD,CAlCM","sourcesContent":["import React, { FC, useMemo } from 'react';\nimport './film-card.scss';\nimport { FilmCardProps } from './film-card.types';\n\nexport const FilmCard: FC<FilmCardProps> = ({\n  image,\n  genreIds,\n  title,\n  year,\n  genres,\n}) => {\n  const filteredGenres = useMemo(\n    () => genres.filter(({ id }) => genreIds.includes(id)),\n    [genreIds],\n  );\n\n  return (\n    <div className=\"filmCardWrapper\">\n      <img\n        src={`https://image.tmdb.org/t/p/w500/${image}`}\n        alt={title}\n        className=\"image\"\n      />\n      <div className=\"contentWrapper\">\n        <div className=\"contentTop\">\n          <h4 className=\"title\">{title}</h4>\n          <p className=\"year\">{year}</p>\n        </div>\n        <div className=\"genresWrapper\">\n          {filteredGenres.map((item, id, array) => (\n            <p key={item.id} className=\"genre\">\n              {id !== array.length - 1 ? `${item.name}, ` : item.name}\n            </p>\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}