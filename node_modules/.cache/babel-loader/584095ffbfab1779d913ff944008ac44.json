{"ast":null,"code":"import _slicedToArray from\"/home/misha/projects/films-list/node_modules/@babel/runtime/helpers/esm/slicedToArray\";/* eslint-disable */import{useCallback,useMemo,useState}from'react';import{SortList}from'../../types';var useSortData=function useSortData(handleSort){var _useState=useState(false),_useState2=_slicedToArray(_useState,2),isOpenSelect=_useState2[0],setIsOpenSelect=_useState2[1];var _useState3=useState(''),_useState4=_slicedToArray(_useState3,2),sortBy=_useState4[0],setSortBy=_useState4[1];var handleOpenSelect=useCallback(function(){setIsOpenSelect(!isOpenSelect);},[isOpenSelect]);var sortValues=useMemo(function(){return[{id:SortList.SORT_ASC,name:'By oldest'},{id:SortList.SORT_DESC,name:'By newest'}];},[]);var handleSelect=function handleSelect(sortName,sortValue){handleSort({sortValue:sortValue});setSortBy(sortName);};return{isOpenSelect:isOpenSelect,sortBy:sortBy,sortValues:sortValues,handleSelect:handleSelect,handleOpenSelect:handleOpenSelect};};export{useSortData};","map":{"version":3,"sources":["/home/misha/projects/films-list/src/components/sort/sort.hook.ts"],"names":["useCallback","useMemo","useState","SortList","useSortData","handleSort","isOpenSelect","setIsOpenSelect","sortBy","setSortBy","handleOpenSelect","sortValues","id","SORT_ASC","name","SORT_DESC","handleSelect","sortName","sortValue"],"mappings":"kHAAA,oBACA,OAASA,WAAT,CAAsBC,OAAtB,CAA+BC,QAA/B,KAA+C,OAA/C,CACA,OAASC,QAAT,KAAyB,aAAzB,CAGA,GAAMC,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,CAACC,UAAD,CAAyC,CAC3D,cAAwCH,QAAQ,CAAC,KAAD,CAAhD,wCAAOI,YAAP,eAAqBC,eAArB,eACA,eAA4BL,QAAQ,CAAC,EAAD,CAApC,yCAAOM,MAAP,eAAeC,SAAf,eACA,GAAMC,CAAAA,gBAAgB,CAAGV,WAAW,CAAC,UAAM,CACzCO,eAAe,CAAC,CAACD,YAAF,CAAf,CACD,CAFmC,CAEjC,CAACA,YAAD,CAFiC,CAApC,CAIA,GAAMK,CAAAA,UAAU,CAAGV,OAAO,CACxB,iBAAM,CACJ,CAAEW,EAAE,CAAET,QAAQ,CAACU,QAAf,CAAyBC,IAAI,CAAE,WAA/B,CADI,CAEJ,CAAEF,EAAE,CAAET,QAAQ,CAACY,SAAf,CAA0BD,IAAI,CAAE,WAAhC,CAFI,CAAN,EADwB,CAKxB,EALwB,CAA1B,CAQA,GAAME,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,CAACC,QAAD,CAAmBC,SAAnB,CAA2C,CAC9Db,UAAU,CAAC,CAAEa,SAAS,CAATA,SAAF,CAAD,CAAV,CACAT,SAAS,CAACQ,QAAD,CAAT,CACD,CAHD,CAKA,MAAO,CACLX,YAAY,CAAZA,YADK,CAELE,MAAM,CAANA,MAFK,CAGLG,UAAU,CAAVA,UAHK,CAILK,YAAY,CAAZA,YAJK,CAKLN,gBAAgB,CAAhBA,gBALK,CAAP,CAOD,CA3BD,CA6BA,OAASN,WAAT","sourcesContent":["/* eslint-disable */\nimport { useCallback, useMemo, useState } from 'react';\nimport { SortList } from '../../types';\nimport { SortProps } from './sort.types';\n\nconst useSortData = (handleSort: SortProps['handleSort']) => {\n  const [isOpenSelect, setIsOpenSelect] = useState(false);\n  const [sortBy, setSortBy] = useState('');\n  const handleOpenSelect = useCallback(() => {\n    setIsOpenSelect(!isOpenSelect);\n  }, [isOpenSelect]);\n\n  const sortValues = useMemo(\n    () => [\n      { id: SortList.SORT_ASC, name: 'By oldest' },\n      { id: SortList.SORT_DESC, name: 'By newest' },\n    ],\n    [],\n  );\n\n  const handleSelect = (sortName: string, sortValue: SortList) => {\n    handleSort({ sortValue });\n    setSortBy(sortName);\n  };\n\n  return {\n    isOpenSelect,\n    sortBy,\n    sortValues,\n    handleSelect,\n    handleOpenSelect,\n  };\n};\n\nexport { useSortData };\n"]},"metadata":{},"sourceType":"module"}