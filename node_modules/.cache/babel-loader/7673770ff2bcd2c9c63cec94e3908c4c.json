{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useCallback, useMemo, useState } from 'react';\nimport { SortList } from '../../app.enums';\n\nconst useSortData = handleSort => {\n  _s();\n\n  const [isOpenSelect, setIsOpenSelect] = useState(false);\n  const [sortBy, setSortBy] = useState('');\n  const handleOpenSelect = useCallback(() => {\n    setIsOpenSelect(!isOpenSelect);\n  }, [isOpenSelect]);\n  const sortValues = useMemo(() => [{\n    id: SortList.SORT_ASC,\n    name: 'By oldest'\n  }, {\n    id: SortList.SORT_DESC,\n    name: 'By newest'\n  }], []);\n\n  const handleSelect = (sortName, sortValue) => {\n    handleSort(sortValue);\n    setSortBy(sortName);\n  };\n\n  return {\n    isOpenSelect,\n    sortBy,\n    sortValues,\n    handleSelect,\n    handleOpenSelect\n  };\n};\n\n_s(useSortData, \"vNJ6tQx6mkC6zT7gKF+ZRkc76wY=\");\n\nexport { useSortData };","map":{"version":3,"sources":["/home/misha/projects/films-list/src/components/sort/sort.hook.ts"],"names":["useCallback","useMemo","useState","SortList","useSortData","handleSort","isOpenSelect","setIsOpenSelect","sortBy","setSortBy","handleOpenSelect","sortValues","id","SORT_ASC","name","SORT_DESC","handleSelect","sortName","sortValue"],"mappings":";;AAAA,SAASA,WAAT,EAAsBC,OAAtB,EAA+BC,QAA/B,QAA+C,OAA/C;AACA,SAASC,QAAT,QAAyB,iBAAzB;;AAGA,MAAMC,WAAW,GAAIC,UAAD,IAAyC;AAAA;;AAC3D,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCL,QAAQ,CAAC,KAAD,CAAhD;AACA,QAAM,CAACM,MAAD,EAASC,SAAT,IAAsBP,QAAQ,CAAC,EAAD,CAApC;AACA,QAAMQ,gBAAgB,GAAGV,WAAW,CAAC,MAAM;AACzCO,IAAAA,eAAe,CAAC,CAACD,YAAF,CAAf;AACD,GAFmC,EAEjC,CAACA,YAAD,CAFiC,CAApC;AAIA,QAAMK,UAAU,GAAGV,OAAO,CACxB,MAAM,CACJ;AAAEW,IAAAA,EAAE,EAAET,QAAQ,CAACU,QAAf;AAAyBC,IAAAA,IAAI,EAAE;AAA/B,GADI,EAEJ;AAAEF,IAAAA,EAAE,EAAET,QAAQ,CAACY,SAAf;AAA0BD,IAAAA,IAAI,EAAE;AAAhC,GAFI,CADkB,EAKxB,EALwB,CAA1B;;AAQA,QAAME,YAAY,GAAG,CAACC,QAAD,EAAmBC,SAAnB,KAA2C;AAC9Db,IAAAA,UAAU,CAACa,SAAD,CAAV;AACAT,IAAAA,SAAS,CAACQ,QAAD,CAAT;AACD,GAHD;;AAKA,SAAO;AAAEX,IAAAA,YAAF;AAAgBE,IAAAA,MAAhB;AAAwBG,IAAAA,UAAxB;AAAoCK,IAAAA,YAApC;AAAkDN,IAAAA;AAAlD,GAAP;AACD,CArBD;;GAAMN,W;;AAuBN,SAASA,WAAT","sourcesContent":["import { useCallback, useMemo, useState } from 'react';\nimport { SortList } from '../../app.enums';\nimport { SortProps } from './sort.types';\n\nconst useSortData = (handleSort: SortProps['handleSort']) => {\n  const [isOpenSelect, setIsOpenSelect] = useState(false);\n  const [sortBy, setSortBy] = useState('');\n  const handleOpenSelect = useCallback(() => {\n    setIsOpenSelect(!isOpenSelect);\n  }, [isOpenSelect]);\n\n  const sortValues = useMemo(\n    () => [\n      { id: SortList.SORT_ASC, name: 'By oldest' },\n      { id: SortList.SORT_DESC, name: 'By newest' },\n    ],\n    [],\n  );\n\n  const handleSelect = (sortName: string, sortValue: SortList) => {\n    handleSort(sortValue);\n    setSortBy(sortName);\n  };\n\n  return { isOpenSelect, sortBy, sortValues, handleSelect, handleOpenSelect };\n};\n\nexport { useSortData };\n"]},"metadata":{},"sourceType":"module"}