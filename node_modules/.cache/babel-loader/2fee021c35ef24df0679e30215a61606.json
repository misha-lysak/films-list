{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { getFilms, getGenres } from './api';\n\nconst useAppData = () => {\n  _s();\n\n  const [films, setFilms] = useState();\n  const [genres, setGenres] = useState([]);\n  React.useEffect(() => {\n    getFilms('', setFilms);\n  }, []);\n  React.useEffect(() => {\n    getGenres('', setGenres);\n  }, []);\n\n  const handleSelectOption = ids => {\n    const convertedIds = ids.join(',');\n    getFilms(`&with_genres=${convertedIds}`, setFilms);\n  };\n\n  const handleSort = sortValue => {\n    getFilms(`&sort_by=${sortValue}`, setFilms);\n  };\n\n  return {\n    films,\n    setFilms,\n    genres,\n    setGenres,\n    handleSelectOption,\n    handleSort\n  };\n};\n\n_s(useAppData, \"pQDUtH9zp+OV3+G6JJrbAoZxlPg=\");\n\nexport { useAppData };","map":{"version":3,"sources":["/home/misha/projects/films-list/src/app.hook.ts"],"names":["React","useState","getFilms","getGenres","useAppData","films","setFilms","genres","setGenres","useEffect","handleSelectOption","ids","convertedIds","join","handleSort","sortValue"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;;AAIA,MAAMC,UAAU,GAAG,MAAM;AAAA;;AACvB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBL,QAAQ,EAAlC;AACA,QAAM,CAACM,MAAD,EAASC,SAAT,IAAsBP,QAAQ,CAAc,EAAd,CAApC;AAEAD,EAAAA,KAAK,CAACS,SAAN,CAAgB,MAAM;AACpBP,IAAAA,QAAQ,CAAC,EAAD,EAAKI,QAAL,CAAR;AACD,GAFD,EAEG,EAFH;AAIAN,EAAAA,KAAK,CAACS,SAAN,CAAgB,MAAM;AACpBN,IAAAA,SAAS,CAAC,EAAD,EAAKK,SAAL,CAAT;AACD,GAFD,EAEG,EAFH;;AAIA,QAAME,kBAAkB,GAAIC,GAAD,IAAmB;AAC5C,UAAMC,YAAY,GAAGD,GAAG,CAACE,IAAJ,CAAS,GAAT,CAArB;AACAX,IAAAA,QAAQ,CAAE,gBAAeU,YAAa,EAA9B,EAAiCN,QAAjC,CAAR;AACD,GAHD;;AAKA,QAAMQ,UAAU,GAAIC,SAAD,IAAyB;AAC1Cb,IAAAA,QAAQ,CAAE,YAAWa,SAAU,EAAvB,EAA0BT,QAA1B,CAAR;AACD,GAFD;;AAIA,SAAO;AACLD,IAAAA,KADK;AAELC,IAAAA,QAFK;AAGLC,IAAAA,MAHK;AAILC,IAAAA,SAJK;AAKLE,IAAAA,kBALK;AAMLI,IAAAA;AANK,GAAP;AAQD,CA7BD;;GAAMV,U;;AA+BN,SAASA,UAAT","sourcesContent":["import React, { useState } from 'react';\nimport { getFilms, getGenres } from './api';\nimport { SortList } from './app.enums';\nimport { FilmsResponse, GenresState } from './app.types';\n\nconst useAppData = () => {\n  const [films, setFilms] = useState<FilmsResponse>();\n  const [genres, setGenres] = useState<GenresState>([]);\n\n  React.useEffect(() => {\n    getFilms('', setFilms);\n  }, []);\n\n  React.useEffect(() => {\n    getGenres('', setGenres);\n  }, []);\n\n  const handleSelectOption = (ids: number[]) => {\n    const convertedIds = ids.join(',');\n    getFilms(`&with_genres=${convertedIds}`, setFilms);\n  };\n\n  const handleSort = (sortValue: SortList) => {\n    getFilms(`&sort_by=${sortValue}`, setFilms);\n  };\n\n  return {\n    films,\n    setFilms,\n    genres,\n    setGenres,\n    handleSelectOption,\n    handleSort,\n  };\n};\n\nexport { useAppData };\n"]},"metadata":{},"sourceType":"module"}