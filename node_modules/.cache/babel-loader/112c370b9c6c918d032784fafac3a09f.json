{"ast":null,"code":"import _objectSpread from\"/home/misha/projects/films-list/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _slicedToArray from\"/home/misha/projects/films-list/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState}from'react';import{getFilms,getGenres}from'../../api';var useHomeData=function useHomeData(){var _useState=useState(true),_useState2=_slicedToArray(_useState,2),isFirstDicker=_useState2[0],setIsFirstDicker=_useState2[1];var _useState3=useState(),_useState4=_slicedToArray(_useState3,2),films=_useState4[0],setFilms=_useState4[1];var _useState5=useState([]),_useState6=_slicedToArray(_useState5,2),genres=_useState6[0],setGenres=_useState6[1];var _useState7=useState({with_genres:'',sort_by:'',page:1}),_useState8=_slicedToArray(_useState7,2),queryParams=_useState8[0],setQueryParams=_useState8[1];React.useEffect(function(){getFilms('',setFilms);},[]);React.useEffect(function(){getGenres('',setGenres);},[]);var handleSelectOption=function handleSelectOption(ids){var convertedIds=ids.join(',');getFilms(\"&with_genres=\".concat(convertedIds),setFilms);};var handleSort=function handleSort(sortValue){getFilms(\"&sort_by=\".concat(sortValue),setFilms);};var handlePagination=function handlePagination(page){getFilms(\"&page=\".concat(Math.ceil(page/2)),setFilms);};var handleSearch=function handleSearch(_ref){var genresIds=_ref.genresIds,sortValue=_ref.sortValue,page=_ref.page,_ref$isFetch=_ref.isFetch,isFetch=_ref$isFetch===void 0?true:_ref$isFetch;var i=page&&(page%2===0||page-1===queryParams.page);setIsFirstDicker(!!i);var searchValues=_objectSpread(_objectSpread({},queryParams),{},{with_genres:(genresIds===null||genresIds===void 0?void 0:genresIds.join(','))||queryParams.with_genres,sort_by:sortValue!==null&&sortValue!==void 0?sortValue:queryParams.sort_by,page:Math.ceil((page!==null&&page!==void 0?page:queryParams===null||queryParams===void 0?void 0:queryParams.page)/2)});setQueryParams(searchValues);var queryParamsString=Object.entries(searchValues).map(function(query){return\"&\".concat(query[0],\"=\").concat(query[1]);});if(isFetch){getFilms(queryParamsString===null||queryParamsString===void 0?void 0:queryParamsString.join(''),setFilms);}};return{films:films,setFilms:setFilms,genres:genres,setGenres:setGenres,handleSelectOption:handleSelectOption,handleSort:handleSort,handlePagination:handlePagination,handleSearch:handleSearch,isFirstDicker:isFirstDicker};};export{useHomeData};","map":{"version":3,"sources":["/home/misha/projects/films-list/src/pages/home/home.hook.ts"],"names":["React","useState","getFilms","getGenres","useHomeData","isFirstDicker","setIsFirstDicker","films","setFilms","genres","setGenres","with_genres","sort_by","page","queryParams","setQueryParams","useEffect","handleSelectOption","ids","convertedIds","join","handleSort","sortValue","handlePagination","Math","ceil","handleSearch","genresIds","isFetch","i","searchValues","queryParamsString","Object","entries","map","query"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { getFilms, getGenres } from '../../api';\nimport {\n  FilmsResponse,\n  GenresState,\n  HandleSearchPropsType,\n  SortList,\n} from '../../types';\n\nconst useHomeData = () => {\n  const [isFirstDicker, setIsFirstDicker] = useState(true);\n  const [films, setFilms] = useState<FilmsResponse>();\n  const [genres, setGenres] = useState<GenresState>([]);\n  const [queryParams, setQueryParams] = useState<{\n    [key: string]: string | number;\n    page: number;\n  }>({\n    with_genres: '',\n    sort_by: '',\n    page: 1,\n  });\n  React.useEffect(() => {\n    getFilms('', setFilms);\n  }, []);\n\n  React.useEffect(() => {\n    getGenres('', setGenres);\n  }, []);\n\n  const handleSelectOption = (ids: number[]) => {\n    const convertedIds = ids.join(',');\n    getFilms(`&with_genres=${convertedIds}`, setFilms);\n  };\n\n  const handleSort = (sortValue: SortList) => {\n    getFilms(`&sort_by=${sortValue}`, setFilms);\n  };\n\n  const handlePagination = (page: number) => {\n    getFilms(`&page=${Math.ceil(page / 2)}`, setFilms);\n  };\n\n  const handleSearch = ({\n    genresIds,\n    sortValue,\n    page,\n    isFetch = true,\n  }: HandleSearchPropsType) => {\n    const i = page && (page % 2 === 0 || page - 1 === queryParams.page);\n    setIsFirstDicker(!!i);\n\n    const searchValues = {\n      ...queryParams,\n      with_genres: genresIds?.join(',') || queryParams.with_genres,\n      sort_by: sortValue ?? queryParams.sort_by,\n      page: Math.ceil((page ?? queryParams?.page) / 2),\n    };\n\n    setQueryParams(searchValues);\n\n    const queryParamsString = Object.entries(searchValues).map((query) => {\n      return `&${query[0]}=${query[1]}`;\n    });\n\n    if (isFetch) {\n      getFilms(queryParamsString?.join(''), setFilms);\n    }\n  };\n\n  return {\n    films,\n    setFilms,\n    genres,\n    setGenres,\n    handleSelectOption,\n    handleSort,\n    handlePagination,\n    handleSearch,\n    isFirstDicker,\n  };\n};\n\nexport { useHomeData };\n"]},"metadata":{},"sourceType":"module"}