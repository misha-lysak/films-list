{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState } from 'react';\n\nconst usePaginationData = (count, handlePagination) => {\n  _s();\n\n  const [selectedTab, setSelectedTab] = useState(1);\n  const tabs = [count && selectedTab + 1 > count ? selectedTab - 5 : null, count && selectedTab + 2 > count ? selectedTab - 4 : null, count && selectedTab + 3 > count ? selectedTab - 3 : null, selectedTab - 2 > 1 ? selectedTab - 2 : null, selectedTab - 1 > 1 ? selectedTab - 1 : null, selectedTab === 1 || selectedTab === count ? null : selectedTab, count && selectedTab + 1 < count ? selectedTab + 1 : null, count && selectedTab + 2 < count ? selectedTab + 2 : null, selectedTab - 2 < 1 ? selectedTab + 3 : null, selectedTab - 3 < 1 ? selectedTab + 4 : null];\n\n  const handleSelect = value => {\n    if (typeof value === 'string') {\n      return;\n    }\n\n    if (selectedTab !== value && handlePagination) {\n      handlePagination({\n        page: value,\n        isFetch: !(value % 2 === 0 && value - 1 === selectedTab || value % 2 !== 0 && value + 1 === selectedTab)\n      });\n      setSelectedTab(value);\n    }\n  };\n\n  return {\n    tabs,\n    selectedTab,\n    handleSelect\n  };\n};\n\n_s(usePaginationData, \"RpoqPst8uYGE5H4PF1vfeCKpLvA=\");\n\nexport { usePaginationData };","map":{"version":3,"sources":["/home/misha/projects/films-list/src/components/pagination/pagination.hook.ts"],"names":["useState","usePaginationData","count","handlePagination","selectedTab","setSelectedTab","tabs","handleSelect","value","page","isFetch"],"mappings":";;AAAA,SAASA,QAAT,QAAyB,OAAzB;;AAGA,MAAMC,iBAAiB,GAAG,CAACC,KAAD,EAAiBC,gBAAjB,KAAyD;AAAA;;AACjF,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCL,QAAQ,CAAS,CAAT,CAA9C;AAEA,QAAMM,IAAI,GAAG,CACXJ,KAAK,IAAIE,WAAW,GAAG,CAAd,GAAkBF,KAA3B,GAAmCE,WAAW,GAAG,CAAjD,GAAqD,IAD1C,EAEXF,KAAK,IAAIE,WAAW,GAAG,CAAd,GAAkBF,KAA3B,GAAmCE,WAAW,GAAG,CAAjD,GAAqD,IAF1C,EAGXF,KAAK,IAAIE,WAAW,GAAG,CAAd,GAAkBF,KAA3B,GAAmCE,WAAW,GAAG,CAAjD,GAAqD,IAH1C,EAIXA,WAAW,GAAG,CAAd,GAAkB,CAAlB,GAAsBA,WAAW,GAAG,CAApC,GAAwC,IAJ7B,EAKXA,WAAW,GAAG,CAAd,GAAkB,CAAlB,GAAsBA,WAAW,GAAG,CAApC,GAAwC,IAL7B,EAMXA,WAAW,KAAK,CAAhB,IAAqBA,WAAW,KAAKF,KAArC,GAA6C,IAA7C,GAAoDE,WANzC,EAOXF,KAAK,IAAIE,WAAW,GAAG,CAAd,GAAkBF,KAA3B,GAAmCE,WAAW,GAAG,CAAjD,GAAqD,IAP1C,EAQXF,KAAK,IAAIE,WAAW,GAAG,CAAd,GAAkBF,KAA3B,GAAmCE,WAAW,GAAG,CAAjD,GAAqD,IAR1C,EASXA,WAAW,GAAG,CAAd,GAAkB,CAAlB,GAAsBA,WAAW,GAAG,CAApC,GAAwC,IAT7B,EAUXA,WAAW,GAAG,CAAd,GAAkB,CAAlB,GAAsBA,WAAW,GAAG,CAApC,GAAwC,IAV7B,CAAb;;AAaA,QAAMG,YAAY,GAAIC,KAAD,IAAmB;AACtC,QAAI,OAAOA,KAAP,KAAiB,QAArB,EAA+B;AAC7B;AACD;;AACD,QAAIJ,WAAW,KAAKI,KAAhB,IAAyBL,gBAA7B,EAA+C;AAC7CA,MAAAA,gBAAgB,CAAC;AACfM,QAAAA,IAAI,EAAED,KADS;AAEfE,QAAAA,OAAO,EACL,EAAGF,KAAK,GAAG,CAAR,KAAc,CAAd,IAAmBA,KAAK,GAAG,CAAR,KAAcJ,WAAlC,IACEI,KAAK,GAAG,CAAR,KAAc,CAAd,IAAmBA,KAAK,GAAG,CAAR,KAAcJ,WADrC;AAHa,OAAD,CAAhB;AAMAC,MAAAA,cAAc,CAACG,KAAD,CAAd;AACD;AACF,GAbD;;AAeA,SAAO;AACLF,IAAAA,IADK;AAELF,IAAAA,WAFK;AAGLG,IAAAA;AAHK,GAAP;AAKD,CApCD;;GAAMN,iB;;AAsCN,SAASA,iBAAT","sourcesContent":["import { useState } from 'react';\nimport { HandleSearchType } from '../../types';\n\nconst usePaginationData = (count?: number, handlePagination?: HandleSearchType) => {\n  const [selectedTab, setSelectedTab] = useState<number>(1);\n\n  const tabs = [\n    count && selectedTab + 1 > count ? selectedTab - 5 : null,\n    count && selectedTab + 2 > count ? selectedTab - 4 : null,\n    count && selectedTab + 3 > count ? selectedTab - 3 : null,\n    selectedTab - 2 > 1 ? selectedTab - 2 : null,\n    selectedTab - 1 > 1 ? selectedTab - 1 : null,\n    selectedTab === 1 || selectedTab === count ? null : selectedTab,\n    count && selectedTab + 1 < count ? selectedTab + 1 : null,\n    count && selectedTab + 2 < count ? selectedTab + 2 : null,\n    selectedTab - 2 < 1 ? selectedTab + 3 : null,\n    selectedTab - 3 < 1 ? selectedTab + 4 : null,\n  ];\n\n  const handleSelect = (value: number) => {\n    if (typeof value === 'string') {\n      return;\n    }\n    if (selectedTab !== value && handlePagination) {\n      handlePagination({\n        page: value,\n        isFetch:\n          !((value % 2 === 0 && value - 1 === selectedTab)\n          || (value % 2 !== 0 && value + 1 === selectedTab)),\n      });\n      setSelectedTab(value);\n    }\n  };\n\n  return {\n    tabs,\n    selectedTab,\n    handleSelect,\n  };\n};\n\nexport { usePaginationData };\n"]},"metadata":{},"sourceType":"module"}