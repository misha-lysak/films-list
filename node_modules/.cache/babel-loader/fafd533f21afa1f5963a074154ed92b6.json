{"ast":null,"code":"var _jsxFileName = \"/home/misha/projects/films-list/src/components/pagination/pagination.tsx\",\n    _s = $RefreshSig$();\n\nimport classnames from 'classnames';\nimport React, { useState } from 'react';\nimport './pagination.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const Pagination = ({\n  count,\n  handlePagination\n}) => {\n  _s();\n\n  const [selectedTab, setSelectedTab] = useState(1);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: count && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"paginationWrapper\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        onClick: () => {\n          if (selectedTab !== 1) {\n            setSelectedTab(1);\n            handlePagination({\n              page: 1\n            });\n            console.log(handlePagination({\n              page: 1\n            }));\n          }\n        },\n        className: \"first\",\n        children: \"1\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dynamicTabsWrapper\",\n        children: [selectedTab + 1 > count ? selectedTab - 5 : null, selectedTab + 2 > count ? selectedTab - 4 : null, selectedTab + 3 > count ? selectedTab - 3 : null, selectedTab - 2 > 1 ? selectedTab - 2 : null, selectedTab - 1 > 1 ? selectedTab - 1 : null, selectedTab === 1 || selectedTab === count ? null : selectedTab, selectedTab + 1 < count ? selectedTab + 1 : null, selectedTab + 2 < count ? selectedTab + 2 : null, selectedTab - 2 < 1 ? selectedTab + 3 : null, selectedTab - 3 < 1 ? selectedTab + 4 : null // selectedTab - 4 < 1 ? selectedTab + 5 : null,\n        ].map(item => {\n          return /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: item && /*#__PURE__*/_jsxDEV(\"div\", {\n              onClick: () => {\n                if (typeof item === 'string') {\n                  return;\n                }\n\n                if (selectedTab !== item) {\n                  handlePagination({\n                    page: item\n                  });\n                  setSelectedTab(item);\n                }\n              },\n              className: classnames('tab', {\n                ['selected']: selectedTab === item\n              }),\n              children: item\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 45,\n              columnNumber: 21\n            }, this)\n          }, void 0, false);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        onClick: () => {\n          if (selectedTab !== count) {\n            handlePagination({\n              page: count\n            });\n            setSelectedTab(count);\n          }\n        },\n        className: \"last\",\n        children: count\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n};\n\n_s(Pagination, \"RpoqPst8uYGE5H4PF1vfeCKpLvA=\");\n\n_c = Pagination;\n\nvar _c;\n\n$RefreshReg$(_c, \"Pagination\");","map":{"version":3,"sources":["/home/misha/projects/films-list/src/components/pagination/pagination.tsx"],"names":["classnames","React","useState","Pagination","count","handlePagination","selectedTab","setSelectedTab","page","console","log","map","item"],"mappings":"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","sourcesContent":["import classnames from 'classnames';\nimport React, { FC, useState } from 'react';\nimport './pagination.scss';\nimport { PaginationProps } from './pagination.types';\n\nexport const Pagination: FC<PaginationProps> = ({\n  count,\n  handlePagination,\n}) => {\n  const [selectedTab, setSelectedTab] = useState<number>(1);\n\n  return (\n    <>\n      {count && (\n        <div className=\"paginationWrapper\">\n          <div\n            onClick={() => {\n              if (selectedTab !== 1) {\n                setSelectedTab(1);\n                handlePagination({ page: 1 });\n                console.log(handlePagination({ page: 1 }));\n              }\n            }}\n            className=\"first\"\n          >\n            1\n          </div>\n          <div className=\"dynamicTabsWrapper\">\n            {[\n              selectedTab + 1 > count ? selectedTab - 5 : null,\n              selectedTab + 2 > count ? selectedTab - 4 : null,\n              selectedTab + 3 > count ? selectedTab - 3 : null,\n              selectedTab - 2 > 1 ? selectedTab - 2 : null,\n              selectedTab - 1 > 1 ? selectedTab - 1 : null,\n              selectedTab === 1 || selectedTab === count ? null : selectedTab,\n              selectedTab + 1 < count ? selectedTab + 1 : null,\n              selectedTab + 2 < count ? selectedTab + 2 : null,\n              selectedTab - 2 < 1 ? selectedTab + 3 : null,\n              selectedTab - 3 < 1 ? selectedTab + 4 : null,\n              // selectedTab - 4 < 1 ? selectedTab + 5 : null,\n            ].map((item) => {\n              return (\n                <>\n                  {item && (\n                    <div\n                      onClick={() => {\n                        if (typeof item === 'string') {\n                          return;\n                        }\n                        if (selectedTab !== item) {\n                          handlePagination({ page: item });\n                          setSelectedTab(item);\n                        }\n                      }}\n                      className={classnames('tab', {['selected']: selectedTab === item})}\n                    >\n                      {item}\n                    </div>\n                  )}\n                </>\n              );\n            })}\n          </div>\n          <div\n            onClick={() => {\n              if (selectedTab !== count) {\n                handlePagination({ page: count });\n                setSelectedTab(count);\n              }\n            }}\n            className=\"last\"\n          >\n            {count}\n          </div>\n        </div>\n      )}\n    </>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}