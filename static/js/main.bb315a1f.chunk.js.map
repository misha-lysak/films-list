{"version":3,"sources":["types/enums.ts","components/film-card/film-card.tsx","components/film-list/film-list.tsx","components/header/header.tsx","components/select/select.tsx","components/select/select.hook.ts","components/pagination/pagination.tsx","components/pagination/pagination.hook.ts","components/sort/sort.hook.ts","components/sort/sort.tsx","api.ts","pages/home/home.tsx","pages/home/home.hook.ts","App.tsx","index.tsx"],"names":["SortList","FilmCard","image","genreIds","title","year","genres","filteredGenres","useMemo","filter","id","includes","className","src","alt","map","item","array","length","name","FilmList","filmList","film","poster_path","genre_ids","release_date","Header","Select","handleSelectOption","options","useState","isOpenSelect","setIsOpenSelect","selectedOptions","setSelectOptions","handleOpenSelect","useCallback","handleRemoveSelectedOption","filteredSelectedOptions","option","genresIds","useSelectData","onClick","some","sOption","prev","MemoSelect","React","memo","Pagination","count","handlePagination","selectedTab","setSelectedTab","tabs","handleSelect","value","page","isFetch","usePaginationData","classnames","Sort","handleSort","sortBy","setSortBy","sortValues","SORT_ASC","SORT_DESC","sortName","sortValue","useSortData","API_KEY","GENRES_URL","MOVIE_URL","http","axios","create","baseURL","responseType","getGenres","url","setState","a","get","then","response","data","getFilms","Home","isFirstDicker","setIsFirstDicker","films","setFilms","setGenres","with_genres","sort_by","queryParams","setQueryParams","useEffect","ids","convertedIds","join","Math","ceil","handleSearch","i","searchValues","queryParamsString","Object","entries","query","useHomeData","results","slice","total_pages","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.bb315a1f.chunk.js","sourcesContent":["export enum SortList {\n  SORT_ASC = 'release_date.asc',\n  SORT_DESC = 'release_date.desc',\n}\n","import React, { FC, useMemo } from 'react';\nimport './film-card.scss';\nimport { FilmCardProps } from './film-card.types';\n\nexport const FilmCard: FC<FilmCardProps> = ({\n  image,\n  genreIds,\n  title,\n  year,\n  genres,\n}) => {\n  const filteredGenres = useMemo(\n    () => genres.filter(({ id }) => genreIds.includes(id)),\n    [genreIds],\n  );\n\n  return (\n    <div className=\"filmCardWrapper\">\n      <img\n        src={`https://image.tmdb.org/t/p/w500/${image}`}\n        alt={title}\n        className=\"image\"\n      />\n      <div className=\"contentWrapper\">\n        <div className=\"contentTop\">\n          <h4 className=\"title\">{title}</h4>\n          <p className=\"year\">{year}</p>\n        </div>\n        <div className=\"genresWrapper\">\n          {filteredGenres.map((item, id, array) => (\n            <p key={item.id} className=\"genre\">\n              {id !== array.length - 1 ? `${item.name}, ` : item.name}\n            </p>\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n};\n","import React, { FC } from 'react';\nimport { FilmCard } from '../film-card';\nimport './film-list.scss';\nimport { FilmListProps } from './film-list.types';\n\nconst FilmList: FC<FilmListProps> = ({ filmList, genres }) => {\n  return (\n    <div className=\"filmListWrapper\">\n      {filmList?.[0] ? (\n        filmList?.map((film) => (\n          <FilmCard\n            key={film.id}\n            image={film.poster_path}\n            genreIds={film.genre_ids}\n            title={film.title}\n            year={film.release_date}\n            genres={genres}\n          />\n        ))\n      ) : (\n        <div className='noResults'>Can't find some films with this genres</div>\n      )}\n    </div>\n  );\n};\n\nexport { FilmList };\n","import React, { FC } from 'react';\nimport './header.scss';\n\nconst Header: FC = () => {\n  return (\n    <div className=\"header\">\n      <div className=\"title\">Film Searcher</div>\n    </div>\n  );\n};\n\nexport { Header };\n","import React, { FC } from 'react';\nimport { useSelectData } from './select.hook';\nimport './select.scss';\nimport { SelectProps } from './select.types';\n\nconst Select: FC<SelectProps> = ({ handleSelectOption, options }) => {\n  const {\n    isOpenSelect,\n    selectedOptions,\n    handleOpenSelect,\n    handleRemoveSelectedOption,\n    setSelectOptions,\n  } = useSelectData(handleSelectOption);\n\n  return (\n    <div className=\"selectWrapper\">\n      <div className=\"select\">\n        {selectedOptions?.[0]?.id ? (\n          selectedOptions?.map(({ id, name }) => (\n            <div\n              key={id}\n              className=\"chosenOptionsWrapper\"\n              onClick={() => handleRemoveSelectedOption(id)}\n            >\n              <span className=\"chosenOptionName\">{name}</span>\n              <div className=\"deleteChosenOption\">+</div>\n            </div>\n          ))\n        ) : (\n          <p className=\"emptyValue\">Choose some category</p>\n        )}\n        <div className=\"toggleOpenSelect\" onClick={() => handleOpenSelect()}>\n          &#x27BE;\n        </div>\n      </div>\n      {isOpenSelect && (\n        <div className=\"optionsWrapper\">\n          {options.filter((option) => !selectedOptions?.some((sOption) => sOption.id === option.id))\n            .map(({ id, name }) => (\n              <div\n                key={id}\n                onClick={() => {\n                  handleSelectOption({\n                    genresIds: [...selectedOptions.map((sOption) => sOption.id), id],\n                  });\n                  setSelectOptions((prev: { id: number; name: string }[]) => [\n                    ...prev,\n                    { id, name },\n                  ]);\n                  handleOpenSelect();\n                }}\n                className=\"option\"\n              >\n                {name}\n              </div>\n            ))}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport const MemoSelect = React.memo(Select);\n","import { useCallback, useState } from 'react';\nimport { HandleSearchType, GenresState } from '../../types';\n\nconst useSelectData = (handleSelectOption: HandleSearchType) => {\n  const [isOpenSelect, setIsOpenSelect] = useState(false);\n  const [selectedOptions, setSelectOptions] = useState<GenresState>([]);\n\n  const handleOpenSelect = useCallback(() => {\n    setIsOpenSelect(!isOpenSelect);\n  }, [isOpenSelect]);\n\n  const handleRemoveSelectedOption = (id: number) => {\n    const filteredSelectedOptions = selectedOptions.filter((option) => option.id !== id);\n    setSelectOptions(filteredSelectedOptions);\n    handleSelectOption({ genresIds: filteredSelectedOptions.map((option) => option.id) });\n  };\n\n  return {\n    isOpenSelect,\n    selectedOptions,\n    handleOpenSelect,\n    handleRemoveSelectedOption,\n    setSelectOptions,\n  };\n};\n\nexport { useSelectData };\n","import classnames from 'classnames';\nimport React, { FC } from 'react';\nimport { usePaginationData } from './pagination.hook';\nimport './pagination.scss';\nimport { PaginationProps } from './pagination.types';\n\nexport const Pagination: FC<PaginationProps> = ({\n  count,\n  handlePagination,\n}) => {\n  const { tabs, selectedTab, handleSelect } = usePaginationData(count, handlePagination);\n\n  return (\n    <>\n      {count && (\n        <div className=\"paginationWrapper\">\n          <div\n            onClick={() => {\n              handleSelect(1);\n            }}\n            /* eslint-disable-next-line */\n            className={classnames('first', { ['selected']: selectedTab === 1 })}\n            >\n            1\n          </div>\n          <div className=\"dynamicTabsWrapper\">\n            {tabs.map((item) => {\n              return (\n                <>\n                  {item && (\n                    <div\n                      onClick={() => {\n                        handleSelect(item);\n                      }}\n                      /* eslint-disable-next-line */\n                      className={classnames('tab', { ['selected']: selectedTab === item })}\n                    >\n                      {item}\n                    </div>\n                  )}\n                </>\n              );\n            })}\n          </div>\n          <div\n            onClick={() => {\n              handleSelect(count);\n            }}\n\n            /* eslint-disable-next-line */\n            className={classnames('last', { ['selected']: selectedTab === count })}\n            >\n            {count}\n          </div>\n        </div>\n      )}\n    </>\n  );\n};\n","import { useState } from 'react';\nimport { HandleSearchType } from '../../types';\n\nconst usePaginationData = (count?: number, handlePagination?: HandleSearchType) => {\n  const [selectedTab, setSelectedTab] = useState<number>(1);\n\n  const tabs = [\n    count && selectedTab + 1 > count ? selectedTab - 5 : null,\n    count && selectedTab + 2 > count ? selectedTab - 4 : null,\n    count && selectedTab + 3 > count ? selectedTab - 3 : null,\n    selectedTab - 2 > 1 ? selectedTab - 2 : null,\n    selectedTab - 1 > 1 ? selectedTab - 1 : null,\n    selectedTab === 1 || selectedTab === count ? null : selectedTab,\n    count && selectedTab + 1 < count ? selectedTab + 1 : null,\n    count && selectedTab + 2 < count ? selectedTab + 2 : null,\n    selectedTab - 2 < 1 ? selectedTab + 3 : null,\n    selectedTab - 3 < 1 ? selectedTab + 4 : null,\n  ];\n\n  const handleSelect = (value: number) => {\n    if (typeof value === 'string') {\n      return;\n    }\n    if (selectedTab !== value && handlePagination) {\n      handlePagination({\n        page: value,\n        isFetch:\n          !((value % 2 === 0 && value - 1 === selectedTab)\n          || (value % 2 !== 0 && value + 1 === selectedTab)),\n      });\n      setSelectedTab(value);\n    }\n  };\n\n  return {\n    tabs,\n    selectedTab,\n    handleSelect,\n  };\n};\n\nexport { usePaginationData };\n","/* eslint-disable */\nimport { useCallback, useMemo, useState } from 'react';\nimport { SortList } from '../../types';\nimport { SortProps } from './sort.types';\n\nconst useSortData = (handleSort: SortProps['handleSort']) => {\n  const [isOpenSelect, setIsOpenSelect] = useState(false);\n  const [sortBy, setSortBy] = useState('');\n  const handleOpenSelect = useCallback(() => {\n    setIsOpenSelect(!isOpenSelect);\n  }, [isOpenSelect]);\n\n  const sortValues = useMemo(\n    () => [\n      { id: SortList.SORT_ASC, name: 'By oldest' },\n      { id: SortList.SORT_DESC, name: 'By newest' },\n    ],\n    [],\n  );\n\n  const handleSelect = (sortName: string, sortValue: SortList) => {\n    handleSort({ sortValue });\n    setSortBy(sortName);\n  };\n\n  return {\n    isOpenSelect,\n    sortBy,\n    sortValues,\n    handleSelect,\n    handleOpenSelect,\n  };\n};\n\nexport { useSortData };\n","import React, {\n  FC,\n} from 'react';\nimport { useSortData } from './sort.hook';\nimport './sort.scss';\nimport { SortProps } from './sort.types';\n\nexport const Sort: FC<SortProps> = ({ handleSort }) => {\n  const {\n    isOpenSelect,\n    sortBy,\n    sortValues,\n    handleSelect,\n    handleOpenSelect,\n  } = useSortData(handleSort);\n  \n  return (\n    <div className=\"sortWrapper\">\n      <div onClick={() => handleOpenSelect()} className=\"select\">\n        {sortBy ? (\n          <span className=\"chosenOptionName\">{sortBy}</span>\n        ) : (\n          <span className=\"chosenOptionName\">Sort</span>\n        )}\n\n        <div className=\"toggleOpenSelect\" onClick={() => handleOpenSelect()}>\n          &#x27BE;\n        </div>\n      </div>\n      {isOpenSelect && (\n        <div className=\"optionsWrapper\">\n          {sortValues.map(({ id, name }) => (\n            <div\n              key={id}\n              onClick={() => {\n                handleOpenSelect();\n                handleSelect(name, id);\n              }}\n              className=\"option\"\n            >\n              {name}\n            </div>\n          ))}\n        </div>\n      )}\n    </div>\n  );\n};\n","import axios from 'axios';\n\nconst API_KEY = '55603383b6e7d248eaf4b2df9f74c6ec';\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst GENRES_URL = `/genre/movie/list?api_key=${API_KEY}&language=en-US`;\nconst MOVIE_URL = `/discover/movie?api_key=${API_KEY}&language=en-US`;\n\nconst http = axios.create({\n  baseURL: BASE_URL,\n  responseType: 'json',\n});\n\nconst getGenres = async (url: string, setState: (re: any) => void) => {\n  return http.get(`${GENRES_URL}${url}`).then((response: any) => {\n    setState(response.data.genres);\n  });\n};\n\nconst getFilms = (url: string, setState: (re: any) => void) => {\n  return http.get(`${MOVIE_URL}${url}`).then((response) => {\n    setState(response.data);\n  });\n};\n\nexport { getFilms, getGenres };\n","import React from 'react';\nimport { Header, MemoSelect, FilmList } from '../../components';\nimport { Pagination } from '../../components/pagination';\nimport { Sort } from '../../components/sort';\nimport { useHomeData } from './home.hook';\nimport './home.scss';\n\nconst Home = () => {\n  const {\n    films,\n    genres,\n    handleSearch,\n    isFirstDicker,\n  } = useHomeData();\n\n  return (\n    <div className=\"home\">\n      <Header />\n      <div className=\"content\">\n        <div className=\"contentTop\">\n          <MemoSelect options={genres} handleSelectOption={handleSearch} />\n          <Sort handleSort={handleSearch} />\n        </div>\n        <FilmList\n          genres={genres}\n          filmList={isFirstDicker ? films?.results?.slice(0, 10) : films?.results?.slice(10)}\n        />\n        <Pagination\n          handlePagination={handleSearch}\n          count={films?.total_pages}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport { Home };\n","import React, { useState } from 'react';\nimport { getFilms, getGenres } from '../../api';\nimport {\n  FilmsResponse,\n  GenresState,\n  HandleSearchPropsType,\n  SortList,\n} from '../../types';\n\nconst useHomeData = () => {\n  const [isFirstDicker, setIsFirstDicker] = useState(true);\n  const [films, setFilms] = useState<FilmsResponse>();\n  const [genres, setGenres] = useState<GenresState>([]);\n  const [queryParams, setQueryParams] = useState<{\n    [key: string]: string | number;\n    page: number;\n  }>({\n    with_genres: '',\n    sort_by: '',\n    page: 1,\n  });\n  React.useEffect(() => {\n    getFilms('', setFilms);\n  }, []);\n\n  React.useEffect(() => {\n    getGenres('', setGenres);\n  }, []);\n\n  const handleSelectOption = (ids: number[]) => {\n    const convertedIds = ids.join(',');\n    getFilms(`&with_genres=${convertedIds}`, setFilms);\n  };\n\n  const handleSort = (sortValue: SortList) => {\n    getFilms(`&sort_by=${sortValue}`, setFilms);\n  };\n\n  const handlePagination = (page: number) => {\n    getFilms(`&page=${Math.ceil(page / 2)}`, setFilms);\n  };\n\n  const handleSearch = ({\n    genresIds,\n    sortValue,\n    page,\n    isFetch = true,\n  }: HandleSearchPropsType) => {\n    const i = page && (page % 2 === 0 || page - 1 === queryParams.page);\n    setIsFirstDicker(!!i);\n\n    const searchValues = {\n      ...queryParams,\n      with_genres: genresIds?.join(',') || queryParams.with_genres,\n      sort_by: sortValue ?? queryParams.sort_by,\n      page: Math.ceil((page ?? queryParams?.page) / 2),\n    };\n\n    setQueryParams(searchValues);\n\n    const queryParamsString = Object.entries(searchValues).map((query) => {\n      return `&${query[0]}=${query[1]}`;\n    });\n\n    if (isFetch) {\n      getFilms(queryParamsString?.join(''), setFilms);\n    }\n  };\n\n  return {\n    films,\n    setFilms,\n    genres,\n    setGenres,\n    handleSelectOption,\n    handleSort,\n    handlePagination,\n    handleSearch,\n    isFirstDicker,\n  };\n};\n\nexport { useHomeData };\n","import React from 'react';\nimport './App.scss';\nimport { Home } from './pages';\n\nfunction App() {\n  return (\n    <div className=\"app\">\n      <Home />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}